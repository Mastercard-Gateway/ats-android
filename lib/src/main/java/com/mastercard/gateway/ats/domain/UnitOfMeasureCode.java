//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.06.26 at 04:13:46 PM CDT 
//


package com.mastercard.gateway.ats.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for UnitOfMeasureCode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="UnitOfMeasureCode"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="EA"/&gt;
 *     &lt;enumeration value="FOT"/&gt;
 *     &lt;enumeration value="GLI"/&gt;
 *     &lt;enumeration value="GLL"/&gt;
 *     &lt;enumeration value="GRM"/&gt;
 *     &lt;enumeration value="INH"/&gt;
 *     &lt;enumeration value="KGM"/&gt;
 *     &lt;enumeration value="LBR"/&gt;
 *     &lt;enumeration value="MTR"/&gt;
 *     &lt;enumeration value="CM"/&gt;
 *     &lt;enumeration value="LTR"/&gt;
 *     &lt;enumeration value="CL"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "UnitOfMeasureCode")
@XmlEnum
public enum UnitOfMeasureCode {


    /**
     * each
     * 
     */
    EA,

    /**
     * foot
     * 
     */
    FOT,

    /**
     * gallon (UK)
     * 
     */
    GLI,

    /**
     * gallon (US)
     * 
     */
    GLL,

    /**
     * gram
     * 
     */
    GRM,

    /**
     * inch
     * 
     */
    INH,

    /**
     * kilogram
     * 
     */
    KGM,

    /**
     * pound
     * 
     */
    LBR,

    /**
     * Meter linear
     * 
     */
    MTR,

    /**
     * Centimetre
     * 
     */
    CM,

    /**
     * Litre
     * 
     */
    LTR,

    /**
     * Centilitre
     * 
     */
    CL;

    public String value() {
        return name();
    }

    public static UnitOfMeasureCode fromValue(String v) {
        return valueOf(v);
    }

}
