//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.06.26 at 04:13:46 PM CDT 
//


package com.mastercard.gateway.ats.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CardFeatureType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CardFeatureType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="ATM"/&gt;
 *     &lt;enumeration value="AllowRefunds"/&gt;
 *     &lt;enumeration value="AllowDomesticCashback"/&gt;
 *     &lt;enumeration value="AllowManagerApproval"/&gt;
 *     &lt;enumeration value="CashOnly"/&gt;
 *     &lt;enumeration value="ChequeGuarantee"/&gt;
 *     &lt;enumeration value="ChequeDetails"/&gt;
 *     &lt;enumeration value="MandatoryOnline"/&gt;
 *     &lt;enumeration value="PINRequired"/&gt;
 *     &lt;enumeration value="Fuel"/&gt;
 *     &lt;enumeration value="AllowCurrency"/&gt;
 *     &lt;enumeration value="Loyalty"/&gt;
 *     &lt;enumeration value="ElectronicTopUp"/&gt;
 *     &lt;enumeration value="Test"/&gt;
 *     &lt;enumeration value="ICC"/&gt;
 *     &lt;enumeration value="AllowInternationalCashback"/&gt;
 *     &lt;enumeration value="Gift"/&gt;
 *     &lt;enumeration value="Bunkering"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "CardFeatureType")
@XmlEnum
public enum CardFeatureType {

    ATM("ATM"),
    @XmlEnumValue("AllowRefunds")
    ALLOW_REFUNDS("AllowRefunds"),
    @XmlEnumValue("AllowDomesticCashback")
    ALLOW_DOMESTIC_CASHBACK("AllowDomesticCashback"),
    @XmlEnumValue("AllowManagerApproval")
    ALLOW_MANAGER_APPROVAL("AllowManagerApproval"),
    @XmlEnumValue("CashOnly")
    CASH_ONLY("CashOnly"),
    @XmlEnumValue("ChequeGuarantee")
    CHEQUE_GUARANTEE("ChequeGuarantee"),
    @XmlEnumValue("ChequeDetails")
    CHEQUE_DETAILS("ChequeDetails"),
    @XmlEnumValue("MandatoryOnline")
    MANDATORY_ONLINE("MandatoryOnline"),
    @XmlEnumValue("PINRequired")
    PIN_REQUIRED("PINRequired"),
    @XmlEnumValue("Fuel")
    FUEL("Fuel"),
    @XmlEnumValue("AllowCurrency")
    ALLOW_CURRENCY("AllowCurrency"),
    @XmlEnumValue("Loyalty")
    LOYALTY("Loyalty"),
    @XmlEnumValue("ElectronicTopUp")
    ELECTRONIC_TOP_UP("ElectronicTopUp"),
    @XmlEnumValue("Test")
    TEST("Test"),
    ICC("ICC"),
    @XmlEnumValue("AllowInternationalCashback")
    ALLOW_INTERNATIONAL_CASHBACK("AllowInternationalCashback"),
    @XmlEnumValue("Gift")
    GIFT("Gift"),
    @XmlEnumValue("Bunkering")
    BUNKERING("Bunkering");
    private final String value;

    CardFeatureType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CardFeatureType fromValue(String v) {
        for (CardFeatureType c: CardFeatureType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
