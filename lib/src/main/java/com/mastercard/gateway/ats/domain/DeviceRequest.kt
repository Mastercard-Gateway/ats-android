//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.06.26 at 04:13:46 PM CDT 
//


package com.mastercard.gateway.ats.domain

import org.simpleframework.xml.Attribute
import org.simpleframework.xml.Element
import org.simpleframework.xml.Order
import org.simpleframework.xml.Root

import java.math.BigDecimal
import java.math.BigInteger


/**
 *
 * Java class for anonymous complex type.
 *
 *
 *
 * The following schema fragment specifies the expected content contained within this class.
 *
 *
 * <pre>
 * &lt;complexType&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="Output" maxOccurs="2" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="TextLine" maxOccurs="unbounded" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;simpleContent&gt;
 * &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 * &lt;attribute name="Row" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
 * &lt;attribute name="Column" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
 * &lt;attribute name="CharSet" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
 * &lt;attribute name="Erase" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="Echo" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="Cursor" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="Color" type="{http://www.nrf-arts.org/IXRetail/namespace}ColorType" /&gt;
 * &lt;attribute name="Alignment" type="{http://www.nrf-arts.org/IXRetail/namespace}AlignmentType" /&gt;
 * &lt;attribute name="Height" type="{http://www.nrf-arts.org/IXRetail/namespace}HeightType" /&gt;
 * &lt;attribute name="Width" type="{http://www.nrf-arts.org/IXRetail/namespace}WidthType" /&gt;
 * &lt;attribute name="CharStyle1" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
 * &lt;attribute name="CharStyle2" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
 * &lt;attribute name="CharStyle3" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
 * &lt;attribute name="PaperCut" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="MenuItem"&gt;
 * &lt;simpleType&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}integer"&gt;
 * &lt;minInclusive value="0"/&gt;
 * &lt;maxInclusive value="99"/&gt;
 * &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * &lt;/attribute&gt;
 * &lt;/extension&gt;
 * &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;element name="Buzzer" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;simpleContent&gt;
 * &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;boolean"&gt;
 * &lt;attribute name="DurationBeep" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="CounterBeep" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="DurationPause" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;/extension&gt;
 * &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;element name="OutSecureData" type="{http://www.nrf-arts.org/IXRetail/namespace}SecureDataFlow" maxOccurs="unbounded" minOccurs="0"/&gt;
 * &lt;element name="MAC" type="{http://www.nrf-arts.org/IXRetail/namespace}MACType" minOccurs="0"/&gt;
 * &lt;element name="ImageFile" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 * &lt;/sequence&gt;
 * &lt;attribute name="OutDeviceTarget" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}DeviceType" /&gt;
 * &lt;attribute name="InputSynchronize" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="Complete" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="Immediate" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 * &lt;attribute name="Category" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="Code" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;element name="Input" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="Command" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;simpleContent&gt;
 * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;CommandType"&gt;
 * &lt;attribute name="Length" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="MinLength" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="MaxLength" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="Decimals" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="Separator" type="{http://www.nrf-arts.org/IXRetail/namespace}SeparatorType" /&gt;
 * &lt;attribute name="CardReadElement" type="{http://www.nrf-arts.org/IXRetail/namespace}CardReadType" /&gt;
 * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 * &lt;attribute name="DataRequired" type="{http://www.nrf-arts.org/IXRetail/namespace}DataRequiredType" /&gt;
 * &lt;/extension&gt;
 * &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;element name="InSecureData" type="{http://www.nrf-arts.org/IXRetail/namespace}SecureDataFlow" maxOccurs="unbounded" minOccurs="0"/&gt;
 * &lt;/sequence&gt;
 * &lt;attribute name="InDeviceTarget" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}DeviceType" /&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;element name="Event" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="EventData"&gt;
 * &lt;complexType&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="Dispenser" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" minOccurs="0"/&gt;
 * &lt;element name="TotalAmount" type="{http://www.nrf-arts.org/IXRetail/namespace}TotalAmountType" minOccurs="0"/&gt;
 * &lt;element name="CardIdent" type="{http://www.nrf-arts.org/IXRetail/namespace}CardValueDRType" minOccurs="0"/&gt;
 * &lt;element name="DataRequired" type="{http://www.nrf-arts.org/IXRetail/namespace}DataRequiredType" maxOccurs="4" minOccurs="0"/&gt;
 * &lt;element name="ProductsAllowed" minOccurs="0"&gt;
 * &lt;complexType&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="ProductCode" maxOccurs="99"&gt;
 * &lt;complexType&gt;
 * &lt;simpleContent&gt;
 * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;ProductGroupType"&gt;
 * &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 * &lt;attribute name="UnitMeasure" type="{http://www.nrf-arts.org/IXRetail/namespace}UnitOfMeasureCode" /&gt;
 * &lt;attribute name="Quantity"&gt;
 * &lt;simpleType&gt;
 * &lt;restriction base="{http://www.nrf-arts.org/IXRetail/namespace}Quantity"&gt;
 * &lt;minInclusive value="0"/&gt;
 * &lt;maxInclusive value="999.999"/&gt;
 * &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * &lt;/attribute&gt;
 * &lt;/extension&gt;
 * &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;/sequence&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;/sequence&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;/sequence&gt;
 * &lt;attribute name="EventType" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}EventTypes" /&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * &lt;/element&gt;
 * &lt;/sequence&gt;
 * &lt;attribute name="RequestType" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}DeviceRequestType" /&gt;
 * &lt;attribute name="ApplicationSender" type="{http://www.nrf-arts.org/IXRetail/namespace}ApplicationType" /&gt;
 * &lt;attribute name="WorkstationID" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}WorkstationIDType" /&gt;
 * &lt;attribute name="TerminalID" type="{http://www.nrf-arts.org/IXRetail/namespace}TerminalIDType" /&gt;
 * &lt;attribute name="POPID" type="{http://www.nrf-arts.org/IXRetail/namespace}POPIDType" /&gt;
 * &lt;attribute name="RequestID" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}RequestIDType" /&gt;
 * &lt;attribute name="SequenceID" type="{http://www.nrf-arts.org/IXRetail/namespace}SequenceIDType" /&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
</pre> *
 */
@Root(name = "DeviceRequest", strict = false)
@Order(elements = arrayOf("output", "input", "event"))
data class DeviceRequest(

        @Element(name = "Output")
        var output: List<Output>? = null,
        @Element(name = "Input")
        var input: DeviceRequest.Input? = null,
        @Element(name = "Event")
        var event: DeviceRequest.Event? = null,
        @Attribute(name = "RequestType", required = true)
        var requestType: DeviceRequestType,
        @Attribute(name = "ApplicationSender")
        var applicationSender: String? = null,
        @Attribute(name = "WorkstationID", required = true)
        var workstationID: String,
        @Attribute(name = "TerminalID")
        var terminalID: String? = null,
        @Attribute(name = "POPID")
        var popid: String? = null,
        @Attribute(name = "RequestID", required = true)
        var requestID: String,
        @Attribute(name = "SequenceID")
        var sequenceID: Int? = null) {


    /**
     *
     * Java class for anonymous complex type.
     *
     *
     *
     * The following schema fragment specifies the expected content contained within this class.
     *
     *
     * <pre>
     * &lt;complexType&gt;
     * &lt;complexContent&gt;
     * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     * &lt;sequence&gt;
     * &lt;element name="EventData"&gt;
     * &lt;complexType&gt;
     * &lt;complexContent&gt;
     * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     * &lt;sequence&gt;
     * &lt;element name="Dispenser" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" minOccurs="0"/&gt;
     * &lt;element name="TotalAmount" type="{http://www.nrf-arts.org/IXRetail/namespace}TotalAmountType" minOccurs="0"/&gt;
     * &lt;element name="CardIdent" type="{http://www.nrf-arts.org/IXRetail/namespace}CardValueDRType" minOccurs="0"/&gt;
     * &lt;element name="DataRequired" type="{http://www.nrf-arts.org/IXRetail/namespace}DataRequiredType" maxOccurs="4" minOccurs="0"/&gt;
     * &lt;element name="ProductsAllowed" minOccurs="0"&gt;
     * &lt;complexType&gt;
     * &lt;complexContent&gt;
     * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     * &lt;sequence&gt;
     * &lt;element name="ProductCode" maxOccurs="99"&gt;
     * &lt;complexType&gt;
     * &lt;simpleContent&gt;
     * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;ProductGroupType"&gt;
     * &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     * &lt;attribute name="UnitMeasure" type="{http://www.nrf-arts.org/IXRetail/namespace}UnitOfMeasureCode" /&gt;
     * &lt;attribute name="Quantity"&gt;
     * &lt;simpleType&gt;
     * &lt;restriction base="{http://www.nrf-arts.org/IXRetail/namespace}Quantity"&gt;
     * &lt;minInclusive value="0"/&gt;
     * &lt;maxInclusive value="999.999"/&gt;
     * &lt;/restriction&gt;
     * &lt;/simpleType&gt;
     * &lt;/attribute&gt;
     * &lt;/extension&gt;
     * &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * &lt;/element&gt;
     * &lt;/sequence&gt;
     * &lt;/restriction&gt;
     * &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * &lt;/element&gt;
     * &lt;/sequence&gt;
     * &lt;/restriction&gt;
     * &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * &lt;/element&gt;
     * &lt;/sequence&gt;
     * &lt;attribute name="EventType" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}EventTypes" /&gt;
     * &lt;/restriction&gt;
     * &lt;/complexContent&gt;
     * &lt;/complexType&gt;
    </pre> *
     */
    @Order(elements = ["eventData"])
    data class Event(

            @Element(name = "EventData", required = true)
            var eventData: EventData,
            @Attribute(name = "EventType", required = true)
            var eventType: EventTypes) {


        /**
         *
         * Java class for anonymous complex type.
         *
         *
         *
         * The following schema fragment specifies the expected content contained within this class.
         *
         *
         * <pre>
         * &lt;complexType&gt;
         * &lt;complexContent&gt;
         * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         * &lt;sequence&gt;
         * &lt;element name="Dispenser" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" minOccurs="0"/&gt;
         * &lt;element name="TotalAmount" type="{http://www.nrf-arts.org/IXRetail/namespace}TotalAmountType" minOccurs="0"/&gt;
         * &lt;element name="CardIdent" type="{http://www.nrf-arts.org/IXRetail/namespace}CardValueDRType" minOccurs="0"/&gt;
         * &lt;element name="DataRequired" type="{http://www.nrf-arts.org/IXRetail/namespace}DataRequiredType" maxOccurs="4" minOccurs="0"/&gt;
         * &lt;element name="ProductsAllowed" minOccurs="0"&gt;
         * &lt;complexType&gt;
         * &lt;complexContent&gt;
         * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         * &lt;sequence&gt;
         * &lt;element name="ProductCode" maxOccurs="99"&gt;
         * &lt;complexType&gt;
         * &lt;simpleContent&gt;
         * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;ProductGroupType"&gt;
         * &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
         * &lt;attribute name="UnitMeasure" type="{http://www.nrf-arts.org/IXRetail/namespace}UnitOfMeasureCode" /&gt;
         * &lt;attribute name="Quantity"&gt;
         * &lt;simpleType&gt;
         * &lt;restriction base="{http://www.nrf-arts.org/IXRetail/namespace}Quantity"&gt;
         * &lt;minInclusive value="0"/&gt;
         * &lt;maxInclusive value="999.999"/&gt;
         * &lt;/restriction&gt;
         * &lt;/simpleType&gt;
         * &lt;/attribute&gt;
         * &lt;/extension&gt;
         * &lt;/simpleContent&gt;
         * &lt;/complexType&gt;
         * &lt;/element&gt;
         * &lt;/sequence&gt;
         * &lt;/restriction&gt;
         * &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * &lt;/element&gt;
         * &lt;/sequence&gt;
         * &lt;/restriction&gt;
         * &lt;/complexContent&gt;
         * &lt;/complexType&gt;
        </pre> *
         */
        @Order(elements = arrayOf("dispenser", "totalAmount", "cardIdent", "dataRequired", "productsAllowed"))
        data class EventData(

                @Element(name = "Dispenser")
                var dispenser: Short? = null,
                @Element(name = "TotalAmount")
                var totalAmount: TotalAmountType? = null,
                @Element(name = "CardIdent")
                var cardIdent: CardValueDRType? = null,
                @Element(name = "DataRequired")
                var dataRequired: List<DataRequiredType>? = null,
                @Element(name = "ProductsAllowed")
                var productsAllowed: DeviceRequest.Event.EventData.ProductsAllowed? = null) {

            /**
             *
             * Java class for anonymous complex type.
             *
             *
             *
             * The following schema fragment specifies the expected content contained within this class.
             *
             *
             * <pre>
             * &lt;complexType&gt;
             * &lt;complexContent&gt;
             * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
             * &lt;sequence&gt;
             * &lt;element name="ProductCode" maxOccurs="99"&gt;
             * &lt;complexType&gt;
             * &lt;simpleContent&gt;
             * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;ProductGroupType"&gt;
             * &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
             * &lt;attribute name="UnitMeasure" type="{http://www.nrf-arts.org/IXRetail/namespace}UnitOfMeasureCode" /&gt;
             * &lt;attribute name="Quantity"&gt;
             * &lt;simpleType&gt;
             * &lt;restriction base="{http://www.nrf-arts.org/IXRetail/namespace}Quantity"&gt;
             * &lt;minInclusive value="0"/&gt;
             * &lt;maxInclusive value="999.999"/&gt;
             * &lt;/restriction&gt;
             * &lt;/simpleType&gt;
             * &lt;/attribute&gt;
             * &lt;/extension&gt;
             * &lt;/simpleContent&gt;
             * &lt;/complexType&gt;
             * &lt;/element&gt;
             * &lt;/sequence&gt;
             * &lt;/restriction&gt;
             * &lt;/complexContent&gt;
             * &lt;/complexType&gt;
            </pre> *
             */
            @Order(elements = ["productCode"])
            data class ProductsAllowed(

                    @Element(name = "ProductCode", required = true)
                    var productCode: List<ProductCode>) {

                /**
                 *
                 * Java class for anonymous complex type.
                 *
                 *
                 *
                 * The following schema fragment specifies the expected content contained within this class.
                 *
                 *
                 * <pre>
                 * &lt;complexType&gt;
                 * &lt;simpleContent&gt;
                 * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;ProductGroupType"&gt;
                 * &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
                 * &lt;attribute name="UnitMeasure" type="{http://www.nrf-arts.org/IXRetail/namespace}UnitOfMeasureCode" /&gt;
                 * &lt;attribute name="Quantity"&gt;
                 * &lt;simpleType&gt;
                 * &lt;restriction base="{http://www.nrf-arts.org/IXRetail/namespace}Quantity"&gt;
                 * &lt;minInclusive value="0"/&gt;
                 * &lt;maxInclusive value="999.999"/&gt;
                 * &lt;/restriction&gt;
                 * &lt;/simpleType&gt;
                 * &lt;/attribute&gt;
                 * &lt;/extension&gt;
                 * &lt;/simpleContent&gt;
                 * &lt;/complexType&gt;
                </pre> *
                 */
                data class ProductCode(
                        var value: BigInteger? = null,
                        @Attribute(name = "Name")
                        var name: String? = null,
                        @Attribute(name = "UnitMeasure")
                        var unitMeasure: UnitOfMeasureCode? = null,
                        @Attribute(name = "Quantity")
                        var quantity: BigDecimal? = null)
            }

        }

    }


    /**
     *
     * Java class for anonymous complex type.
     *
     *
     *
     * The following schema fragment specifies the expected content contained within this class.
     *
     *
     * <pre>
     * &lt;complexType&gt;
     * &lt;complexContent&gt;
     * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     * &lt;sequence&gt;
     * &lt;element name="Command" minOccurs="0"&gt;
     * &lt;complexType&gt;
     * &lt;simpleContent&gt;
     * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;CommandType"&gt;
     * &lt;attribute name="Length" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="MinLength" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="MaxLength" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="Decimals" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="Separator" type="{http://www.nrf-arts.org/IXRetail/namespace}SeparatorType" /&gt;
     * &lt;attribute name="CardReadElement" type="{http://www.nrf-arts.org/IXRetail/namespace}CardReadType" /&gt;
     * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="DataRequired" type="{http://www.nrf-arts.org/IXRetail/namespace}DataRequiredType" /&gt;
     * &lt;/extension&gt;
     * &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * &lt;/element&gt;
     * &lt;element name="InSecureData" type="{http://www.nrf-arts.org/IXRetail/namespace}SecureDataFlow" maxOccurs="unbounded" minOccurs="0"/&gt;
     * &lt;/sequence&gt;
     * &lt;attribute name="InDeviceTarget" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}DeviceType" /&gt;
     * &lt;/restriction&gt;
     * &lt;/complexContent&gt;
     * &lt;/complexType&gt;
    </pre> *
     */
    @Order(elements = arrayOf("command", "inSecureData"))
    data class Input(

            @Element(name = "Command")
            var command: Command? = null,
            @Element(name = "InSecureData")
            var inSecureData: List<SecureDataFlow>? = null,
            @Attribute(name = "InDeviceTarget", required = true)
            var inDeviceTarget: DeviceType) {

        /**
         *
         * Java class for anonymous complex type.
         *
         *
         *
         * The following schema fragment specifies the expected content contained within this class.
         *
         *
         * <pre>
         * &lt;complexType&gt;
         * &lt;simpleContent&gt;
         * &lt;extension base="&lt;http://www.nrf-arts.org/IXRetail/namespace&gt;CommandType"&gt;
         * &lt;attribute name="Length" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="MinLength" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="MaxLength" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="Decimals" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="Separator" type="{http://www.nrf-arts.org/IXRetail/namespace}SeparatorType" /&gt;
         * &lt;attribute name="CardReadElement" type="{http://www.nrf-arts.org/IXRetail/namespace}CardReadType" /&gt;
         * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="DataRequired" type="{http://www.nrf-arts.org/IXRetail/namespace}DataRequiredType" /&gt;
         * &lt;/extension&gt;
         * &lt;/simpleContent&gt;
         * &lt;/complexType&gt;
        </pre> *
         */
        data class Command(
                var value: CommandType? = null,
                @Attribute(name = "Length")
                var length: BigInteger? = null,
                @Attribute(name = "MinLength")
                var minLength: BigInteger? = null,
                @Attribute(name = "MaxLength")
                var maxLength: BigInteger? = null,
                @Attribute(name = "Decimals")
                var decimals: BigInteger? = null,
                @Attribute(name = "Separator")
                var separator: SeparatorType? = null,
                @Attribute(name = "CardReadElement")
                var cardReadElement: CardReadType? = null,
                @Attribute(name = "TimeOut")
                var timeOut: BigInteger? = null,
                @Attribute(name = "DataRequired")
                var dataRequired: DataRequiredType? = null)

    }


    /**
     *
     * Java class for anonymous complex type.
     *
     *
     *
     * The following schema fragment specifies the expected content contained within this class.
     *
     *
     * <pre>
     * &lt;complexType&gt;
     * &lt;complexContent&gt;
     * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     * &lt;sequence&gt;
     * &lt;element name="TextLine" maxOccurs="unbounded" minOccurs="0"&gt;
     * &lt;complexType&gt;
     * &lt;simpleContent&gt;
     * &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     * &lt;attribute name="Row" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
     * &lt;attribute name="Column" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
     * &lt;attribute name="CharSet" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
     * &lt;attribute name="Erase" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="Echo" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="Cursor" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="Color" type="{http://www.nrf-arts.org/IXRetail/namespace}ColorType" /&gt;
     * &lt;attribute name="Alignment" type="{http://www.nrf-arts.org/IXRetail/namespace}AlignmentType" /&gt;
     * &lt;attribute name="Height" type="{http://www.nrf-arts.org/IXRetail/namespace}HeightType" /&gt;
     * &lt;attribute name="Width" type="{http://www.nrf-arts.org/IXRetail/namespace}WidthType" /&gt;
     * &lt;attribute name="CharStyle1" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
     * &lt;attribute name="CharStyle2" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
     * &lt;attribute name="CharStyle3" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
     * &lt;attribute name="PaperCut" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="MenuItem"&gt;
     * &lt;simpleType&gt;
     * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}integer"&gt;
     * &lt;minInclusive value="0"/&gt;
     * &lt;maxInclusive value="99"/&gt;
     * &lt;/restriction&gt;
     * &lt;/simpleType&gt;
     * &lt;/attribute&gt;
     * &lt;/extension&gt;
     * &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * &lt;/element&gt;
     * &lt;element name="Buzzer" minOccurs="0"&gt;
     * &lt;complexType&gt;
     * &lt;simpleContent&gt;
     * &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;boolean"&gt;
     * &lt;attribute name="DurationBeep" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="CounterBeep" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="DurationPause" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;/extension&gt;
     * &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * &lt;/element&gt;
     * &lt;element name="OutSecureData" type="{http://www.nrf-arts.org/IXRetail/namespace}SecureDataFlow" maxOccurs="unbounded" minOccurs="0"/&gt;
     * &lt;element name="MAC" type="{http://www.nrf-arts.org/IXRetail/namespace}MACType" minOccurs="0"/&gt;
     * &lt;element name="ImageFile" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
     * &lt;/sequence&gt;
     * &lt;attribute name="OutDeviceTarget" use="required" type="{http://www.nrf-arts.org/IXRetail/namespace}DeviceType" /&gt;
     * &lt;attribute name="InputSynchronize" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="Complete" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="Immediate" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     * &lt;attribute name="Category" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="Code" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
     * &lt;/restriction&gt;
     * &lt;/complexContent&gt;
     * &lt;/complexType&gt;
    </pre> *
     */
    @Order(elements = arrayOf("textLine", "buzzer", "outSecureData", "mac", "imageFile"))
    data class Output(

            @Element(name = "TextLine")
            var textLine: List<TextLine>? = null,
            @Element(name = "Buzzer")
            var buzzer: Buzzer? = null,
            @Element(name = "OutSecureData")
            var outSecureData: List<SecureDataFlow>? = null,
            @Element(name = "MAC")
            var mac: MACType? = null,
            @Element(name = "ImageFile")
            var imageFile: String? = null,
            @Attribute(name = "OutDeviceTarget", required = true)
            var outDeviceTarget: DeviceType,
            @Attribute(name = "InputSynchronize")
            var inputSynchronize: Boolean? = null,
            @Attribute(name = "Complete")
            var complete: Boolean? = null,
            @Attribute(name = "Immediate")
            var immediate: Boolean? = null,
            @Attribute(name = "Category")
            var category: BigInteger? = null,
            @Attribute(name = "Code")
            var code: BigInteger? = null,
            @Attribute(name = "TimeOut")
            var timeOut: BigInteger? = null) {

        /**
         *
         * Java class for anonymous complex type.
         *
         *
         *
         * The following schema fragment specifies the expected content contained within this class.
         *
         *
         * <pre>
         * &lt;complexType&gt;
         * &lt;simpleContent&gt;
         * &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;boolean"&gt;
         * &lt;attribute name="DurationBeep" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="CounterBeep" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="DurationPause" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;/extension&gt;
         * &lt;/simpleContent&gt;
         * &lt;/complexType&gt;
        </pre> *
         */
        data class Buzzer(
                var value: Boolean = false,
                
                @Attribute(name = "DurationBeep")
                var durationBeep: BigInteger? = null,
                @Attribute(name = "CounterBeep")
                var counterBeep: BigInteger? = null,
                @Attribute(name = "DurationPause")
                var durationPause: BigInteger? = null)


        /**
         *
         * Java class for anonymous complex type.
         *
         *
         *
         * The following schema fragment specifies the expected content contained within this class.
         *
         *
         * <pre>
         * &lt;complexType&gt;
         * &lt;simpleContent&gt;
         * &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
         * &lt;attribute name="Row" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
         * &lt;attribute name="Column" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
         * &lt;attribute name="CharSet" type="{http://www.w3.org/2001/XMLSchema}byte" /&gt;
         * &lt;attribute name="Erase" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
         * &lt;attribute name="Echo" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
         * &lt;attribute name="Cursor" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
         * &lt;attribute name="TimeOut" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
         * &lt;attribute name="Color" type="{http://www.nrf-arts.org/IXRetail/namespace}ColorType" /&gt;
         * &lt;attribute name="Alignment" type="{http://www.nrf-arts.org/IXRetail/namespace}AlignmentType" /&gt;
         * &lt;attribute name="Height" type="{http://www.nrf-arts.org/IXRetail/namespace}HeightType" /&gt;
         * &lt;attribute name="Width" type="{http://www.nrf-arts.org/IXRetail/namespace}WidthType" /&gt;
         * &lt;attribute name="CharStyle1" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
         * &lt;attribute name="CharStyle2" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
         * &lt;attribute name="CharStyle3" type="{http://www.nrf-arts.org/IXRetail/namespace}CharStyleType" /&gt;
         * &lt;attribute name="PaperCut" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
         * &lt;attribute name="MenuItem"&gt;
         * &lt;simpleType&gt;
         * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}integer"&gt;
         * &lt;minInclusive value="0"/&gt;
         * &lt;maxInclusive value="99"/&gt;
         * &lt;/restriction&gt;
         * &lt;/simpleType&gt;
         * &lt;/attribute&gt;
         * &lt;/extension&gt;
         * &lt;/simpleContent&gt;
         * &lt;/complexType&gt;
        </pre> *
         */
        data class TextLine(

                var value: String? = null,

                @Attribute(name = "Row")
                var row: Byte? = null,
                @Attribute(name = "Column")
                var column: Byte? = null,
                @Attribute(name = "CharSet")
                var charSet: Byte? = null,
                @Attribute(name = "Erase")
                var erase: Boolean? = null,
                @Attribute(name = "Echo")
                var echo: Boolean? = null,
                @Attribute(name = "Cursor")
                var cursor: Boolean? = null,
                @Attribute(name = "TimeOut")
                var timeOut: BigInteger? = null,
                @Attribute(name = "Color")
                var color: ColorType? = null,
                @Attribute(name = "Alignment")
                var alignment: AlignmentType? = null,
                @Attribute(name = "Height")
                var height: HeightType? = null,
                @Attribute(name = "Width")
                var width: WidthType? = null,
                @Attribute(name = "CharStyle1")
                var charStyle1: CharStyleType? = null,
                @Attribute(name = "CharStyle2")
                var charStyle2: CharStyleType? = null,
                @Attribute(name = "CharStyle3")
                var charStyle3: CharStyleType? = null,
                @Attribute(name = "PaperCut")
                var paperCut: Boolean? = null,
                @Attribute(name = "MenuItem")
                var menuItem: Int? = null)

    }

}
