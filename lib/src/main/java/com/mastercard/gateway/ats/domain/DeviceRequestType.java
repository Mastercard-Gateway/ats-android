//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.06.26 at 04:13:46 PM CDT 
//


package com.mastercard.gateway.ats.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DeviceRequestType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DeviceRequestType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Input"/&gt;
 *     &lt;enumeration value="Output"/&gt;
 *     &lt;enumeration value="SecureInput"/&gt;
 *     &lt;enumeration value="SecureOutput"/&gt;
 *     &lt;enumeration value="AbortInput"/&gt;
 *     &lt;enumeration value="AbortOutput"/&gt;
 *     &lt;enumeration value="Event"/&gt;
 *     &lt;enumeration value="RepeatLastMessage"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DeviceRequestType")
@XmlEnum
public enum DeviceRequestType {

    @XmlEnumValue("Input")
    INPUT("Input"),
    @XmlEnumValue("Output")
    OUTPUT("Output"),
    @XmlEnumValue("SecureInput")
    SECURE_INPUT("SecureInput"),
    @XmlEnumValue("SecureOutput")
    SECURE_OUTPUT("SecureOutput"),
    @XmlEnumValue("AbortInput")
    ABORT_INPUT("AbortInput"),
    @XmlEnumValue("AbortOutput")
    ABORT_OUTPUT("AbortOutput"),
    @XmlEnumValue("Event")
    EVENT("Event"),
    @XmlEnumValue("RepeatLastMessage")
    REPEAT_LAST_MESSAGE("RepeatLastMessage");
    private final String value;

    DeviceRequestType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DeviceRequestType fromValue(String v) {
        for (DeviceRequestType c: DeviceRequestType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
