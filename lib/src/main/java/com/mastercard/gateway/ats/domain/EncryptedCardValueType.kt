//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.06.26 at 04:13:46 PM CDT 
//


package com.mastercard.gateway.ats.domain

import org.simpleframework.xml.Element
import org.simpleframework.xml.Order
import org.simpleframework.xml.Root

import java.math.BigInteger


/**
 *
 * Java class for EncryptedCardValueType complex type.
 *
 *
 *
 * The following schema fragment specifies the expected content contained within this class.
 *
 *
 * <pre>
 * &lt;complexType name="EncryptedCardValueType"&gt;
 * &lt;complexContent&gt;
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 * &lt;sequence&gt;
 * &lt;element name="Track1" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="Track2" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="Track3" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="Barcode" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="CardPAN" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="StartDate" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="ExpiryDate" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="IssueNumber" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="ServiceCode" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="TokenSalt" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="CV2" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="PostCode" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="Address" type="{http://www.w3.org/2001/XMLSchema}hexBinary" minOccurs="0"/&gt;
 * &lt;element name="EncryptionID" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/&gt;
 * &lt;element name="EncryptionKey" type="{http://www.w3.org/2001/XMLSchema}hexBinary"/&gt;
 * &lt;element name="EncryptionRSA" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 * &lt;/sequence&gt;
 * &lt;/restriction&gt;
 * &lt;/complexContent&gt;
 * &lt;/complexType&gt;
</pre> *
 */
@Suppress("ArrayInDataClass")
@Root(name = "EncryptedCardValueType", strict = false)
@Order(elements = ["track1", "track2", "track3", "barcode", "cardPAN", "startDate", "expiryDate", "issueNumber", "serviceCode", "tokenSalt", "cv2", "postCode", "address", "encryptionID", "encryptionKey", "encryptionRSA"])
data class EncryptedCardValueType (
    @Element(name = "Track1", type = String::class)
    var track1: ByteArray? = null,
    @Element(name = "Track2", type = String::class)
    var track2: ByteArray? = null,
    @Element(name = "Track3", type = String::class)
    var track3: ByteArray? = null,
    @Element(name = "Barcode", type = String::class)
    var barcode: ByteArray? = null,
    @Element(name = "CardPAN", type = String::class)
    var cardPAN: ByteArray? = null,
    @Element(name = "StartDate", type = String::class)
    var startDate: ByteArray? = null,
    @Element(name = "ExpiryDate", type = String::class)
    var expiryDate: ByteArray? = null,
    @Element(name = "IssueNumber", type = String::class)
    var issueNumber: ByteArray? = null,
    @Element(name = "ServiceCode", type = String::class)
    var serviceCode: ByteArray? = null,
    @Element(name = "TokenSalt", type = String::class)
    var tokenSalt: ByteArray? = null,
    @Element(name = "CV2", type = String::class)
    var cv2: ByteArray? = null,
    @Element(name = "PostCode", type = String::class)
    var postCode: ByteArray? = null,
    @Element(name = "Address", type = String::class)
    var address: ByteArray? = null,
    @Element(name = "EncryptionID", required = true)
    var encryptionID: BigInteger,
    @Element(name = "EncryptionKey", required = true, type = String::class)
    var encryptionKey: ByteArray,
    @Element(name = "EncryptionRSA")
    var encryptionRSA: String? = null)
